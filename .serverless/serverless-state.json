{
  "service": {
    "service": "gettogether",
    "serviceObject": {
      "name": "gettogether"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*?]+?)}",
      "name": "aws",
      "runtime": "nodejs10.x",
      "region": "eu-west-1",
      "tracing": true,
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "xray:PutTraceSegments",
            "xray:PutTelemetryRecords"
          ],
          "Resource": "*"
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              },
              "AccelerateConfiguration": {
                "AccelerationStatus": "Enabled"
              }
            }
          },
          "NotifyOrganiserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/gettogether-dev-notifyOrganiser"
            }
          },
          "NotifyOrganiserDLQLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/gettogether-dev-notifyOrganiserDLQ"
            }
          },
          "GettogetherLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/gettogether-dev-gettogether"
            }
          },
          "JoinGetTogetherLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/gettogether-dev-joinGetTogether"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "gettogether",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/gettogether-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/gettogether-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sns:Publish"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:dev-joingettogetherdlq"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "gettogether",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "NotifyOrganiserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/gettogether/dev/1572014815035-2019-10-25T14:46:55.035Z/gettogether.zip"
              },
              "FunctionName": "gettogether-dev-notifyOrganiser",
              "Handler": "src/functions/notifyOrganiser.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "NotifyOrganiserIamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 6,
              "DeadLetterConfig": {
                "TargetArn": {
                  "Fn::Sub": "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:dev-joingettogetherdlq"
                }
              },
              "TracingConfig": {
                "Mode": "Active"
              }
            },
            "DependsOn": [
              "NotifyOrganiserIamRoleLambdaExecution",
              "NotifyOrganiserLogGroup"
            ]
          },
          "NotifyOrganiserLambdaVersionnDXJ974sE6yFPMjfoWGHrmCNPW6hw7mEPV9VGos0w": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "NotifyOrganiserLambdaFunction"
              },
              "CodeSha256": "dtWXUVwjwYbhNd+yf33i2T++o8pHJL4e/lhlT82smko="
            }
          },
          "NotifyOrganiserDLQLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/gettogether/dev/1572014815035-2019-10-25T14:46:55.035Z/gettogether.zip"
              },
              "FunctionName": "gettogether-dev-notifyOrganiserDLQ",
              "Handler": "src/functions/notifyOrganiserDLQ.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 6,
              "TracingConfig": {
                "Mode": "Active"
              }
            },
            "DependsOn": [
              "NotifyOrganiserDLQLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "NotifyOrganiserDLQLambdaVersionhApIojoZVphYdA2Y16GAYowVMBDdZnB2DOJcbEqpA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "NotifyOrganiserDLQLambdaFunction"
              },
              "CodeSha256": "dtWXUVwjwYbhNd+yf33i2T++o8pHJL4e/lhlT82smko="
            }
          },
          "GettogetherLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/gettogether/dev/1572014815035-2019-10-25T14:46:55.035Z/gettogether.zip"
              },
              "FunctionName": "gettogether-dev-gettogether",
              "Handler": "src/functions/getGetTogethers.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "GettogetherIamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "getTogethersTablePath": "/gettogethers/dev/secureTableName",
                  "functionShieldToken": "dmdhbHRlc0BnbWFpbC5jb20AMEUCIGK9gu7R0H95YMZ/KUDldUNOcpoDWc1wFyWbgNZv2UUPAiEA6CqVHPIdbCsdRavMu86+T3P3I4aqeb11pPdfRwZcBUk="
                }
              },
              "TracingConfig": {
                "Mode": "Active"
              }
            },
            "DependsOn": [
              "GettogetherIamRoleLambdaExecution",
              "GettogetherLogGroup"
            ]
          },
          "GettogetherLambdaVersionDEonUPY1HvSzygTUzcPp5bdGN6aloq3dchu1KqJw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GettogetherLambdaFunction"
              },
              "CodeSha256": "dtWXUVwjwYbhNd+yf33i2T++o8pHJL4e/lhlT82smko="
            }
          },
          "JoinGetTogetherLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/gettogether/dev/1572014815035-2019-10-25T14:46:55.035Z/gettogether.zip"
              },
              "FunctionName": "gettogether-dev-joinGetTogether",
              "Handler": "src/functions/joinGetTogether.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "JoinGetTogetherIamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "joinGetTogetherSnsTopic": {
                    "Fn::Sub": "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:dev-joingettogethers"
                  }
                }
              },
              "TracingConfig": {
                "Mode": "Active"
              }
            },
            "DependsOn": [
              "JoinGetTogetherIamRoleLambdaExecution",
              "JoinGetTogetherLogGroup"
            ]
          },
          "JoinGetTogetherLambdaVersionFUYPFpu63sv7nUFwHmjbrZBklwORQ9dlVcJRARgqPM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "JoinGetTogetherLambdaFunction"
              },
              "CodeSha256": "dtWXUVwjwYbhNd+yf33i2T++o8pHJL4e/lhlT82smko="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-gettogether",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceApi": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "api",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceApiGetDashtogether": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceApi"
              },
              "PathPart": "get-together",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceApiGettogether": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceApi"
              },
              "PathPart": "getTogether",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodApiGetDashtogetherOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceApiGetDashtogether"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodApiGetDashtogetherGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceApiGetDashtogether"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "AuthorizerApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GettogetherLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "AuthorizerApiGatewayAuthorizer"
          },
          "ApiGatewayMethodApiGettogetherPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceApiGettogether"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "JoinGetTogetherLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "AuthorizerApiGatewayAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "AuthorizerResultTtlInSeconds": 300,
              "IdentitySource": "method.request.header.Authorization",
              "Name": "authorizer",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "Type": "COGNITO_USER_POOLS",
              "ProviderARNs": [
                {
                  "Fn::Sub": "arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/eu-west-1_c20LHRH9A"
                }
              ]
            }
          },
          "ApiGatewayDeployment1572014794769": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodApiGetDashtogetherOptions",
              "ApiGatewayMethodApiGetDashtogetherGet",
              "ApiGatewayMethodApiGettogetherPost"
            ]
          },
          "GettogetherLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GettogetherLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "JoinGetTogetherLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "JoinGetTogetherLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SNSTopicDevjoingettogethers": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
              "TopicName": "dev-joingettogethers",
              "DisplayName": "",
              "Subscription": [
                {
                  "Endpoint": {
                    "Fn::GetAtt": [
                      "NotifyOrganiserLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Protocol": "lambda"
                }
              ]
            }
          },
          "NotifyOrganiserLambdaPermissionDevjoingettogethersSNS": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "NotifyOrganiserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "sns.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":sns:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    "dev-joingettogethers"
                  ]
                ]
              }
            }
          },
          "SNSTopicDevjoingettogetherdlq": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
              "TopicName": "dev-joingettogetherdlq",
              "DisplayName": "",
              "Subscription": [
                {
                  "Endpoint": {
                    "Fn::GetAtt": [
                      "NotifyOrganiserDLQLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Protocol": "lambda"
                }
              ]
            }
          },
          "NotifyOrganiserDLQLambdaPermissionDevjoingettogetherdlqSNS": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "NotifyOrganiserDLQLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "sns.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":sns:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    "dev-joingettogetherdlq"
                  ]
                ]
              }
            }
          },
          "NotifyOrganiserIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "gettogether",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/gettogether-dev-notifyOrganiser:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sns:Publish"
                        ],
                        "Resource": {
                          "Fn::Sub": "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:dev-joingettogetherdlq"
                        }
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": "sns:Publish",
                        "Resource": {
                          "Fn::Sub": "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:dev-joingettogetherdlq"
                        }
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "gettogether",
                    "dev",
                    "notifyOrganiser",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "GettogetherIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "gettogether",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/gettogether-dev-gettogether:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": "dynamodb:scan",
                        "Resource": {
                          "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/dev-gettogethers"
                        }
                      },
                      {
                        "Effect": "Allow",
                        "Action": "ssm:GetParameters*",
                        "Resource": {
                          "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/gettogethers/dev/*"
                        }
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "gettogether",
                    "dev",
                    "gettogether",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "JoinGetTogetherIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "gettogether",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/gettogether-dev-joinGetTogether:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": "sns:Publish",
                        "Resource": {
                          "Fn::Sub": "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:dev-joingettogethers"
                        }
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "gettogether",
                    "dev",
                    "joinGetTogether",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "GetTogethersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "dev-gettogethers",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "N"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "SubscribeToApiGatewayLogs": {
            "Type": "AWS::Serverless::Application",
            "Properties": {
              "Location": {
                "ApplicationId": "arn:aws:serverlessrepo:us-east-1:374852340823:applications/auto-subscribe-log-group-to-arn",
                "SemanticVersion": "1.9.3"
              },
              "Parameters": {
                "DestinationArn": {
                  "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:cloudwatch-logs-to-logzio-bcn-dev-ship-logs-to-logzio"
                },
                "Prefix": "/aws/lambda",
                "OverrideManualConfigs": true
              }
            }
          },
          "CognitoUserPool": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
              "UserPoolName": "dev-testauthsls-user-pool",
              "UsernameAttributes": [
                "email"
              ],
              "AutoVerifiedAttributes": [
                "email"
              ]
            }
          },
          "CognitoUserPoolClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
              "ClientName": "dev-testauthsls--user-pool-client",
              "UserPoolId": {
                "Ref": "CognitoUserPool"
              },
              "GenerateSecret": false
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "ServerlessDeploymentBucketAccelerated": {
            "Value": true
          },
          "NotifyOrganiserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "NotifyOrganiserLambdaVersionnDXJ974sE6yFPMjfoWGHrmCNPW6hw7mEPV9VGos0w"
            }
          },
          "NotifyOrganiserDLQLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "NotifyOrganiserDLQLambdaVersionhApIojoZVphYdA2Y16GAYowVMBDdZnB2DOJcbEqpA"
            }
          },
          "GettogetherLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GettogetherLambdaVersionDEonUPY1HvSzygTUzcPp5bdGN6aloq3dchu1KqJw"
            }
          },
          "JoinGetTogetherLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "JoinGetTogetherLambdaVersionFUYPFpu63sv7nUFwHmjbrZBklwORQ9dlVcJRARgqPM"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        },
        "Transform": "AWS::Serverless-2016-10-31"
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              },
              "AccelerateConfiguration": {
                "AccelerationStatus": "Enabled"
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "ServerlessDeploymentBucketAccelerated": {
            "Value": true
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "defaultRegion": "eu-west-1",
      "defaultStage": "dev",
      "getTogethersTableName": "dev-gettogethers",
      "joinGetTogetherSnsTopicName": "dev-joingettogethers",
      "joinGetTogetherSnsTopic": "arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:dev-joingettogethers",
      "notifyOrganiserDLQSnsTopicName": "dev-joingettogetherdlq",
      "notifyOrganiserDLQSnsTopic": "arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:dev-joingettogetherdlq"
    },
    "plugins": [
      "serverless-pseudo-parameters",
      "serverless-iam-roles-per-function",
      "serverless-plugin-tracing"
    ],
    "pluginsData": {},
    "functions": {
      "notifyOrganiser": {
        "handler": "src/functions/notifyOrganiser.handler",
        "events": [
          {
            "sns": "dev-joingettogethers"
          }
        ],
        "onError": "arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:dev-joingettogetherdlq",
        "iamRoleStatementsInherit": true,
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"NotifyOrganiserIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][3]"
          }
        ],
        "name": "gettogether-dev-notifyOrganiser",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "notifyOrganiserDLQ": {
        "handler": "src/functions/notifyOrganiserDLQ.handler",
        "events": [
          {
            "sns": "dev-joingettogetherdlq"
          }
        ],
        "name": "gettogether-dev-notifyOrganiserDLQ",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "gettogether": {
        "handler": "src/functions/getGetTogethers.handler",
        "events": [
          {
            "http": {
              "path": "api/get-together",
              "method": "get",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "authorizer",
                "arn": "arn:aws:cognito-idp:#{AWS::Region}:#{AWS::AccountId}:userpool/eu-west-1_c20LHRH9A",
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "iamRoleStatementsInherit": true,
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GettogetherIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2]"
          },
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GettogetherIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][3]"
          }
        ],
        "environment": {
          "getTogethersTablePath": "/gettogethers/dev/secureTableName",
          "functionShieldToken": "dmdhbHRlc0BnbWFpbC5jb20AMEUCIGK9gu7R0H95YMZ/KUDldUNOcpoDWc1wFyWbgNZv2UUPAiEA6CqVHPIdbCsdRavMu86+T3P3I4aqeb11pPdfRwZcBUk="
        },
        "name": "gettogether-dev-gettogether",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "joinGetTogether": {
        "handler": "src/functions/joinGetTogether.handler",
        "events": [
          {
            "http": {
              "path": "api/getTogether",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "environment": {
          "joinGetTogetherSnsTopic": "arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:dev-joingettogethers"
        },
        "iamRoleStatementsInherit": true,
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JoinGetTogetherIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2]"
          }
        ],
        "name": "gettogether-dev-joinGetTogether",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs10.x",
        "vpc": {}
      }
    },
    "resources": {
      "Transform": "AWS::Serverless-2016-10-31",
      "Resources": {
        "GetTogethersTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "dev-gettogethers",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "N"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "SubscribeToApiGatewayLogs": {
          "Type": "AWS::Serverless::Application",
          "Properties": {
            "Location": {
              "ApplicationId": "arn:aws:serverlessrepo:us-east-1:374852340823:applications/auto-subscribe-log-group-to-arn",
              "SemanticVersion": "1.9.3"
            },
            "Parameters": {
              "DestinationArn": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:cloudwatch-logs-to-logzio-bcn-dev-ship-logs-to-logzio",
              "Prefix": "/aws/lambda",
              "OverrideManualConfigs": true
            }
          }
        },
        "CognitoUserPool": {
          "Type": "AWS::Cognito::UserPool",
          "Properties": {
            "UserPoolName": "dev-testauthsls-user-pool",
            "UsernameAttributes": [
              "email"
            ],
            "AutoVerifiedAttributes": [
              "email"
            ]
          }
        },
        "CognitoUserPoolClient": {
          "Type": "AWS::Cognito::UserPoolClient",
          "Properties": {
            "ClientName": "dev-testauthsls--user-pool-client",
            "UserPoolId": {
              "Ref": "CognitoUserPool"
            },
            "GenerateSecret": false
          }
        }
      },
      "Outputs": {}
    },
    "serviceFilename": "serverless.yml",
    "layers": {},
    "artifact": "/home/aitor/serverless/TheServerlessCourseSourceCode/.serverless/gettogether.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/gettogether/dev/1572014815035-2019-10-25T14:46:55.035Z",
    "artifact": "gettogether.zip"
  }
}